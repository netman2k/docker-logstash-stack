version: "3.4"
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:5.6.10
    environment:
      TZ: Asia/Seoul
    networks:
      - logstash
      - elasticsearch
      - kafka
      - monitoring
    ports:
      - "514:5000"
      - "514:5000/udp"
    configs:
      - source: logstash-yml-v1
        target: /usr/share/logstash/config/logstash.yml
      - source: syslog-kafka-conf-v1
        target: /usr/share/logstash/pipeline/syslog.conf
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 20s
      restart_policy:
        condition: on-failure
      #resources:
      #  limits:
      #    cpus: '0.30'
      #  reservations:
      #    cpus: '0.40'
      placement:
        constraints:
          - node.role == worker
  logstash-exporter:
    image: bonniernews/logstash_exporter:v0.1.2
    command: '--web.listen-address=":9198" --logstash.endpoint="http://tasks.logstash:9600"'
    networks:
      - logstash
      - monitoring
      
configs:
  logstash-yml-v1:
    file: ./settings/logstash.yml
  syslog-kafka-conf-v1:
    file: ./pipeline/syslog-kafka.conf

networks:
  logstash:
    external: 
      name: ${LOGSTASH_NETWORK_NAME:-logstash}
  elasticsearch:
    external: 
      name: ${ELASTICSEARCH_NETWORK_NAME:-elasticsearch}
  kafka:
    external:
      name: ${KAFKA_NETWORK_NAME:-kafka}
  monitoring:
    external:
      name: ${MONITORING_NETWORK_NAME:-monitoring}
