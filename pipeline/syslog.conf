input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}

output {
    #elasticsearch { hosts => [ "http://elasticsearch:9200" ] }
    if "_grokparsefailure" in [tags] {
      kafka { 
        bootstrap_servers => 'tasks.kafka01:9092,tasks.kafka02:9092,tasks.kafka03:9092' 
        #bootstrap_servers => 'kafka01:9092,kafka02:9092,kafka03:9092' 
        topic_id          => 'syslog_grokparsefailure' 
      }
    } else {
      kafka { 
        bootstrap_servers => 'tasks.kafka01:9092,tasks.kafka02:9092,tasks.kafka03:9092' 
        #bootstrap_servers => 'kafka01:9092,kafka02:9092,kafka03:9092' 
        topic_id          => 'syslog' 
      }
    }
    #stdout { codec => rubydebug }
}
